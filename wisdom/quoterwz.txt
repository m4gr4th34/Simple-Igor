abbott's admonitions: 1) if you have to ask, you're not entitled to know-dd- 2) if you don't like the answer, you shouldn't have asked the question-dd- . abrams's advice: when eating an elephant, take one bite at a time-dd- . rule of accuracy: when working toward the solution of a problem, it always helps if you know the answer-dd- . corollary: provided, of course, that you know there is a problem-dd- . acheson's rule of the bureaucracy: a memorandum is written not to inform the reader but to protect the writer-dd- . acton's law: power tends to corrupt; absolute power corrupts absolutely-dd- . ade's law: anybody can win -- unless there happens to be a second entry-dd- . airplane law: when the plane you are on is late, the plane you want to transfer to is on time-dd- . albrecht's law: social innovations tend to the level of minimum tolerable well being-dd- . algren's precepts: never eat at a place called mom's-dd- never play cards with a man named doc-dd- and never lie down with a woman who's got more troubles than you-dd- . allen's law of civilization: it is better for civilization to be going down the drain than to be coming up it-dd- . bradley's bromide: if computers get too powerful, we can organize them into a committee - that will do them in-dd- . civilization: civilization advances by extending the number of important operations which we can do without thinking of them-dd- . agnes allen's law: almost anything is easier to get into than out of-dd- . fred allen's law: i'd rather have a free bottle in front of me than a prefrontal lobotomy-dd- . alley's axiom: justice always prevails -dd--dd--dd- three times out of seven-dd- . allison's precept: the best simple-minded test of experience in a particular area is the ability to win money in a series of bets on future occurrences in that area-dd- . anderson's law: i have yet to see any problem, however complicated, which, when you looked at it in the right way, did not become still more complicated-dd- . andrew's canoeing postulate: no matter which direction you start, it's always against the wind coming back-dd- . andrew's deduction: attila the hun came from a broken home-dd- . law of annoyance: when working on a project, if you put away a tool that you're certain you're finished with, you will need it instantly-dd- . anthony's law of force: don't force it, get a larger hammer-dd- . anthony's law of the workshop: any tool, when dropped, will roll into the least accessible corner of the workshop-dd- . corollary: on the way to the corner, any dropped tool will first strike your toes-dd- . approval seeker's law: those whose approval you seek the most give you the least-dd- . the aquinas axiom: what the gods get away with, the cows don't-dd- . army axiom: any order that can be misunderstood has been misunderstood-dd- . army law: if it moves, salute it; if it doesn't move, pick it up; if you can't pick it up, paint it-dd- . astrology law: it's always the wrong time of the month-dd- . fourteenth corollary of atwood's general law of dynamic negatives: no books are lost by loaning except those you particularly wanted to keep-dd- . avery's rule of three: trouble strikes in series of threes, but when working around the house the next job after a series of three is not the fourth job -- it is the start of a brand new series of three-dd- . babcock's law: if it can be borrowed and it can be broken, you will borrow it and you will break it-dd- . baer's quartet: what's good politics is bad economics; what's bad politics is good economics; what's good economics is bad politics; what's bad economics is good politics-dd- . baker's byroad: when you are over the hill, you pick up speed-dd- . baker's law: misery no longer loves company-dd- nowadays it insists on it-dd- . baldy's law: some of it plus the rest of it is all of it-dd- . barr's comment on domestic tranquility: on a beautiful day like this it's hard to believe anyone can be unhappy -- but we'll work on it-dd- . barth's distinction: there are two classes of people: those who divide people into two classes, and those who don't-dd- . bartz's law of hokey horsepuckery: the more ridiculous a belief system, the higher the probability of its success-dd- . baruch's rule for determining old age: old age is always fifteen years older than i am-dd- . forthoffer's cynical summary of barzun's laws: 1) that which has not yet been taught directly can never be taught directly-dd- 2) if at first you don't succeed, you will never succeed-dd- . baxter's first law: government intervention in the free market always leads to a lower national standard of living-dd- . beardsley's warning to lawyers: beware of and eschew pompous prolixity-dd- . beauregard's first law: when you're up to your nose, keep your mouth shut-dd- . beauregard's second law: all people are cremated equal-dd- . thoughts on reality : the trouble with having both feet on the ground is that it brings one into unbearably close contact with the world-dd- thomas szasz -"heresies" . definition: lawyers : litigants are amateur self-justifiers; lawyers are the professional justifiers of others-dd- thomas szasz -"heresies" . axiom on thinking : there is no good digestion without hydrochloric acid; and there is no good thinking without adrenaline-dd- thomas szasz -"heresies" beware of people who tell you that a little knowledge is a dangerous thing - unless they quickly add that no knowledge is a fatal thing-dd- they are trying to make you more vulnerable, not more wise-dd- thomas szasz -"heresies" . thoughts on management : if everyone dislikes it, it must be looked into-dd- if everyone likes it, it must be looked into-dd- . e-dd-e-dd- cummings' theory of knowledge: all ignorance toboggans into know . becker's law: it is much harder to find a job than to keep one-dd- . belle's constant: the ratio of time involved in work to time available for work is usually about 0-dd-6-dd- . benchley's distinction: there are two types of people: those who divide people into two types, and those who don't-dd- . benchley's law: anyone can do any amount of work, provided it isn't the work he is supposed to be doing at that moment-dd- . first law of bicycling: no matter which way you ride, it's uphill and against the wind-dd- . the billings phenomenon: the conclusions of most good operations research studies are obvious-dd- . billing's law: live within your income, even if you have to borrow to do so-dd- . blaauw's law: established technology tends to persist in spite of new technology-dd- . blanchard's newspaper obituary law: if you want your name spelled wrong, die-dd- . bok's law: if you think education is expensive -- try ignorance-dd- . boling's postulate: if you're feeling good, don't worry-dd- you'll get over it-dd- . bolton's law of ascending budgets: under current practices, both expenditures and revenues rise to meet each other, no matter which one may be in excess-dd- . bombeck's rule of medicine: never go to a doctor whose office plants have died-dd- . boyle's observation: a welfare state is one that assumes responsibility for the health, happiness, and general well-being of all its citizens except the taxpayers-dd- . boston's irreversible law of clutter: in any household, junk accumulates to fill the space available for its storage-dd- . booker's law: an ounce of application is worth a ton of abstraction-dd- . bonafede's revelation: the conventional wisdom is that power is an aphrodisiac-dd- in truth, it's exhausting-dd- . boob's law: you always find something the last place you look-dd- . boozer's revision: a bird in the hand is dead-dd- . boren's laws of the bureaucracy: 1) when in doubt, mumble-dd- 2) when in trouble, delegate-dd- 3) when in charge, ponder-dd- . borstelmann's rule: if everything seems to be coming your way, you're probably in the wrong lane-dd- . boultbee's criterion: if the converse of a statement is absurd, the original statement is an insult to the intelligence and should never have been said-dd- . branch's first law of crisis: the spirit of public service will rise, and the bureaucracy will multiply itself much faster, in time of grave national concern-dd- . first law of bridge: it's always the partner's fault-dd- . brien's first law: at some time in the life cycle of virtually every organization, its ability to succeed in spite of itself runs out-dd- . broder's law: anybody that wants the presidency so much that he'll spend two years organizing and campaigning for it is not to be trusted with the office-dd- . brontosaurus principle: organizations can grow faster than their brains can manage them in relation to their environment and to their own physiology; when this occurs, they are an endangered species-dd- . brooks's law: adding manpower to a late software project makes it later-dd- . brooke's law: whenever a system becomes completely defined, some damn fool discovers something which either abolishes the system or expands it beyond recognition-dd- . (sam) brown's law: never offend people with style when you can offend them with substance-dd- . (tony) brown's law of business success: our customer's paperwork is profit-dd- our own paperwork is loss-dd- . bruce-brigg's law of traffic: at any level of traffic, any delay is intolerable-dd- . buchwald's law: as the economy gets better, everything else gets worse-dd- . bucy's law: nothing is ever accomplished by a reasonable man-dd- . bumper sticker axiom: vm systems programmers do it virtually all the time-dd- . bunuel's law: overdoing things is harmful in all cases, even when it comes to efficiency-dd- . burns's balance: if the assumptions are wrong, the conclusions aren't likely to be very good-dd- . butler's law of progress: all progress is based on a universal innate desire on the part of every organism to live beyond its income-dd- . bye's first law of model railroading: anytime you wish to demonstrate something, the number of faults is proportional to the number of viewers-dd- . bye's second law of model railroading: the desire for modeling a prototype is inversely proportional to the decline of the prototype-dd- . cahn's axiom (allen's axiom): when all else fails, read the instructions-dd- . calkin's law of menu language: the number of adjectives and verbs that are added to the description of a menu item is in inverse proportion to the quality of the resulting dish-dd- . john cameron's law: no matter how many times you've had it, if it's offered, take it, because it'll never be quite the same again-dd- . camp's law: a coup that is known in advance is a coup that does not take place-dd- . campbell's law: nature abhors a vacuous experimenter-dd- . canada bill jones's motto: it's morally wrong to allow suckers to keep their money-dd- . canada bill jones's supplement: a smith and wesson beats four aces-dd- . cannon's cogent comment: the leak in the roof is never in the same location as the drip-dd- . captain risser's law: if it's in stock, we have it-xx- . cavanaugh's postulate: all kookies are not in a jar-dd- . law of character and appearance: people don't change; they only become more so-dd- . checkbook balancer's law: in matters of dispute, the bank's balance is always smaller than yours-dd- . cheop's law: nothing ever gets built on schedule or within budget-dd- . chesterton's observation: i have seen the truth and it makes no sense-dd- . chili cook's secret: if your next pot of chili tastes better, it probably is because of something left out, rather than added-dd- . chisholm's second law: when things are going well, something will go wrong-dd- . corollaries: 1) when things just can't get any worse, they will-dd- 2) anytime things appear to be going better, you have overlooked something-dd- . the first discovery of christmas morning: batteries not included-dd- . the first discovery of christmas afternoon: give a kid a new toy - dad will play with the toy, the kid will play with the box it came in-dd- . etorre's observation: the other line moves faster-dd- . faber's fourth law: necessity is the mother of strange bedfellows-dd- . feldstein's law: never, ever, play leapfrog with a unicorn-dd- . the golden rule: whoever has the gold makes the rules-dd- . rev-dd- mahaffey's observation: there's no such thing as a small whiskey-dd- . the law of probable dispersal: whatever hits the fan will not be evenly distributed (also known as: the how come it all landed on me law)-dd- . martha's maxim: if god had meant for us to travel tourist class, he would have made us narrower-dd- . russell's observation: due to a lack of trained trumpeters, the end of the world has been postponed indefinitely-dd- . ellenberg's theory: one good turn gets most of the blanket-dd- . the point of no return law: the light at the end of the tunnel could turn out to be the headlight of an oncoming train-dd- . moer's truism: the trouble with most jobs is the resemblance to being in a sled dog team: no one gets a change of scenery, except the lead dog-dd- . firestone's law of forecasting: chicken little only has to be right once-dd- . gordon's first law: if a project is not worth doing at all, it is not worth doing well-dd- . grierson's law of minimal self-delusion: every man nourishes within himself a secret plan for getting rich that will not work-dd- . gumperson's law: the probability of anything happening is inversely proportional to its desirability-dd- . hoare's law of large problems: inside every large problem there is a small problem struggling to get out-dd- . horowitz's first law of the admirality: a collision at sea can ruin your entire day-dd- . how's law: every man has a scheme that will not work-dd- . jiminez's maxim: if they give you ruled paper, write the other way-dd- . jones' motto: friends may come and go, but enemies accumulate-dd- . mahr's law of restrained involvement: don't get any on you-dd- . maier's law: if the facts do not conform to the theory, they must be discarded-dd- . the first law of management: kickbacks must always exceed bribes-dd- . munroes observation: common sense is not that common-dd- . murphy's law: if anything can go wrong, it will-dd- . the new math version of murphy's law: if there is a 50/50 chance of something going wrong, nine times out of ten it will-dd- . o'toole's commentary on murphy's law: murphy was an optimist-dd- . the first corollary to murphy's law: nothing is as easy as it looks-dd- . the second corollary to murphy's law: everything takes longer than you think-dd- . the third corollary to murphy's law: if there is a possibility of several things going wrong, the one that will cause the most damage will be the one to go wrong-dd- . the fourth corollary to murphy's law: if you perceive that there are four possible ways in which a procedure can go wrong, and circumvent these, then a fifth way will promptly develop-dd- . the fifth corollary to murphy's law: left to themselves, things tend to go from bad to worse-dd- . the sixth corollary to murphy's law: whenever you start out to do something, something else must be done first-dd- . the seventh corollary to murphy's law: every solution breeds new problems-dd- . the eighth corollary to murphy's law: it is impossible to make anything foolproof because fools are so ingenious-dd- . the ninth corollary to murphy's law: nature always sides with the hidden flaw-dd- . the tenth corollary to murphy's law: mother nature is a bitch-dd- . murphy's law, version no-dd- 11: if you fool around with a thing for very long, you will screw it up-dd- . murphy's law, version no-dd- 12: fixing a thing takes longer and costs more than you thought-dd- . murphy's law, version no-dd- 13: no amount of genius can overcome a preoccupation for detail-dd- . murphy's law, version no-dd- 14: complex problems have simple, easy-to-understand wrong answers-dd- . murphy's law, version no-dd- 15: in order for something to become clean, something else must become dirty-dd- . murphy's law, version no-dd- 16: an easily understood, workable falsehood is more useful than a complex, incomprehensible truth-dd- . murphy's law, version no-dd- 17: anything based on greed and avarice is on a firm footing and will prevail-dd- . murphy's law, version no-dd- 18: we have more to fear from the bumbling of the incompetent than from the machinations of the wicked-dd- . murphy's law, version no-dd- 19: as the economy gets better, everything else gets worse-dd- . murphy's law, version no-dd- 20: if several things that could have gone wrong have not gone wrong, it would have been ultimately beneficial for them to have gone wrong-dd- . murphy's law, version no-dd- 21: the secret of success is sincerity-dd- once you can fake that, you have it made-dd- . ninety-ninety rule of project schedules: the first 90% of the task takes 90% of the time-dd- the last 10% of the task takes the other 90%-dd- . nonreciprocal laws of expectations: negative expectations yield negative results-dd- positive expectations yield negative results-dd- . nowlan's truism: an "acceptable level of unemployment" means that the government economist to whom it is acceptable still has a job-dd- . pastore's truth: most jobs are marginally better than daytime tv-dd- . turnaucka's law: the attention span of a computer is only as long as it's electrical cord-dd- . laws of programming: definition: a working program is one that has only unobserved bugs . laws of programming: #1 - every non-trivial program has at least one bug corollary 1: a sufficient condition for program triviality is that it have no bugs-dd- corollary 2: at least one bug will be observed after the author leaves the organization . laws of programming: #2 - bugs will appear in one part of a working program when another "unrelated" part is modified . laws of programming: #3 - the subtlest bugs cause the greatest damage and problems-dd- corollary 1: a subtle bug will modify storage thereby masquerading as some other problem . laws of programming: #4 - ("lulled into security law") a "debugged" program that crashes will wipe out source files on storage devices when there is the least available backup . laws of programming: #5 - a hardware failure will cause system software to crash, and the customer engineer will blame the programmer . laws of programming: #6 - a system software crash will cause hardware to act strangely and the programmers will blame the customer engineer . laws of programming: #7 - the documented interfaces between standard software modules will have undocumented quirks . laws of programming: #8 - the probability of a hardware failure disappearing is inversely proportional to the distance between the computer and the customer engineer . laws of programming: #9 - murphy designed all system software note: for those who may be in doubt, murphy's law states that if anything can go wrong, it will, and always at the most inconvenient time-dd- . laws of programming: #10 - (galvin's law): murphy was an optimist . laws of programming: #11 - any given program, when running, is obsolete . laws of programming: #12 - if a program is useless, it will have to be documented if a program is useful it will have to be changed . laws of programming: #13 - any program will expand to fill all available memory . laws of programming: #14 - the value of a program is proportional to the weight of its output . laws of programming: #15 - program complexity grows until it exceeds the capability of the programmer to maintain it . laws of programming: #16 - make it possible for programmers to write in english and you will find out that programmers cannot write in english . thoughts on programming, number 1: if a programmer is found to be indispensable, the best thing to do is to get rid of him as quickly as possible-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 2: some years ago, when cobol was the great white programming hope, one heard much talk of the possibility of executives being able to read programs -dd--dd--dd- nobody can seriously have this-xx- -dd--dd--dd- even programmers do not read programs-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 3: there are -dd--dd--dd- programs that should be thrown away before ever being used-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 4: asking for efficiency and adaptability in the same program is like asking for a beautiful and modest wife -dd--dd--dd- we'll probably have to settle for one or the other-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 5: if the programmer is working in a language that allows only three dimensions, we are not likely to observe more than three-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 6: putting a bunch of people to work on the same problem doesn't make them a team-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 7: each program has an appropriate level of care and sophistication dependent on the uses to which it will be put-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 8: to detect errors, the programmer must have a conniving mind, one that delights in uncovering flaws where beauty and perfection were once thought to lie-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 9: for locating errors, however, we want a person who has the persistence of a mother-in-law and the collecting instincts of a pack rat-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 10: if the poor workman hates his tools, the good workman hates poor tools-dd- the work of the workingman is, in a sense, defined by his tools-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 11: 'programming' - like 'loving' - is a single word that encompasses an infinitude of activities-dd- -the psychology of computer programming, gerald m-dd- weinberg . einstein's view of questions the important thing is not to stop questioning-dd- curiosity has its own reason for existing-dd- -albert einstein . thoughts on programming, number 12: programming shares with prayer the feature of directional transmission and broadcast reception-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 13: in some terminal systems -dd--dd--dd- the user can keep his program from being pushed down in the priority stack by fiddling with the shift key while he is thinking-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 14: the expert is a person who avoids the small errors as he sweeps on to the grand fallacy-dd- -anonymous . thoughts on programming, number 15: the nature of programming being what it is, there is no relationship between the 'size' of the error and the problems it causes-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 16: when a programmer has a difficult time finding a bug, it is because he is looking in the wrong place-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 17: documentation is the castor oil of programming -dd--dd--dd- the managers know it must be good because programmers hate it so much-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 18: the human mind ordinarily operates at only ten per cent of its capacity - the rest is overhead for the operating system-dd- -anonymous . thoughts on programming, number 19: we stand at the brink of a new age, an age made possible by the revolution that is embodied in the computer-dd- standing on the brink, we could totter either way - to a golden age of liberty or a dark age of tyranny, either of which would surpass anything the world has ever known-dd- perhaps no individual's efforts will make any difference in the result, but we must never cease trying, for then the result is sure to be tyranny-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 20: a ship on the beach is a lighthouse to the sea-dd- -dutch proverb . thoughts on programming, number 21: the programmed computer has all the fascination of the pinball machine or the jukebox mechanism, carried to the ultimate-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 22: the programmer, like the poet, works only slightly removed from pure thought-stuff-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 23: designing grand concepts is fun; finding nitty little bugs is just work-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 24: as soon as one freezes a design, it becomes obsolete in terms of its concepts-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 25: good cooking takes time-dd- if you are made to wait, it is to serve you better, and to please you-dd- -menu of restaurant antoine, new orleans . thoughts on programming, number 26: all programmers are optimists-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 27: this time it will surely run-dd- -anonymous i just found the last bug-dd- -unanimous . thoughts on programming, number 28: a large programming effort -dd--dd--dd- consists of many tasks, some chained end-to-end-dd- the probability that each will go well becomes vanishingly small-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 29: cost does indeed vary as the product of the number of men and the number of months-dd- progress does not-dd- hence the man-month as a unit for measuring the size of a job is a dangerous and deceptive myth-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 30: the bearing of a child takes nine months, no matter how many women are assigned-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 31: when everything has been seen to work, all integrated, you have four more months work to do-dd- -charles portman international computers limited . thoughts on programming, number 32: observe that for the programmer, as for the chef, the urgency of the patron may govern the scheduled completion of the task, but it cannot govern the actual completion-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 33: brooks law: adding manpower to a late software project makes it later-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 34: the sheer number of minds to be coordinated affects the cost of the effort-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 35: conceptual integrity is the most important consideration in system design-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 36: the purpose of a programming system is to make a computer easy to use-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 37: neither function alone nor simplicity alone defines a good design-dd- -the mythical man-month frederick p-dd- brooks, jr-dd- . thoughts on programming, number 38: add little to little and there will be a big pile-dd- -ovid . thoughts on programming, number 39: he'll sit here and he'll say, 'do this-xx- do that-xx-' and nothing will happen-dd- - harry s truman . thoughts on programming, number 40: never go to sea with two chronometers; take one or three-dd- -anonymous . thoughts on programming, number 41: i know it-dd- i know what needs to be done - but every time i try to tackle a technical problem some bloody fool wants me to make a decision about trucks - or telephones - or some damn thing-dd- -robert heinlein the man who sold the moon . thoughts on programming, number 42: the problem was that everybody who was working there, including myself, wanted to do really neat stuff but they didn't want neat stuff, they just wanted a lot of stuff fast-dd- -rick baker, make-up artist for king kong, star wars, et-dd- al-dd- . thoughts on programming, number 43: the generation of random numbers is too important to be left to chance-dd- -robert r-dd- coveyou oak ridge national laboratory . thoughts on programming, number 44: it's redundant-xx- it's redundant-xx- -r-dd- e-dd- dundant . thoughts on programming, number 45: i don't know any reason why we couldn't do it, but maybe we can think of one-dd- -mark c-dd- davison . thoughts on programming, number 46: bug-qq- that's not a bug, that's a feature-dd- -t-dd- john wendel . thoughts on programming, number 47: the computer 'doth make fools of us all'-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 48: any fool without the ability to share a laugh on himself will be unable to tolerate programming for long-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 49: the programmer's national anthem is 'aaaaaaaagggggggghhhhhhhh'-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 50: when we finally see the light, we see how once again we have fallen into some foolish assumption, some oafish practice, or some witless blunder-dd- -the psychology of computer programming, gerald m-dd- weinberg . thoughts on programming, number 51: the computer always has an excuse: the programmer never does-dd- -mark c-dd- davison . thoughts on programming, number 52: the user does not know what he wants until he sees what he gets-dd- -ed yourdon . thoughts on programming, number 53: completely compatible - things that work together with less than $1000 of interfaces and less than 100 man-hours of software patches-dd- -datamazing, 4/1/78 . thoughts on programming, number 54: stack manipulation - the use of inflatable falsies-dd- -datamazing, 4/1/78 . thoughts on programming, number 55: design of both hardware and software must be considered when doing the system design-dd- -proceedings of the ieee, 2/78, p-dd-167 . thoughts on programming, number 56: the job cannot be done right unless the necessary tools are available-dd- -proceedings of the ieee, 2/78, p-dd-174 . thoughts on programming, number 57: i hear and i forget-dd- i see and i remember-dd- i do and i understand-dd- -confucius . thoughts on programming, number 58: on a clear disk you can seek forever-dd- -computerworld button . thoughts on programming, number 59: i write all my critical routines in assembler, and my comedy routines in fortran-dd- -anonymous . thoughts on programming, number 60: it is impossible to make anything foolproof because fools are so ingenious-dd- -edsel murphy, dec-dd- . thoughts on programming, number 61: it seems intuitively clear that the existence of an error in a program will not be reflected in the test result unless the program component in error is executed during the test-dd- -j-dd-c-dd- huang, program instrumentation . q's law: no matter what stage of completion one reaches in a north sea oil project, the cost of the remainder of the project remains the same-dd- . radar's fundamental truth: the grass is brown on both sides of the fence-dd- . sander's rumination: life is a game, the object of which is to discover the object of the game-dd- . segal's law: a man with one watch knows what time it is-dd- a man with two watches is never sure-dd- . the law of selective gravity: an object will fall so as to do the most damage-dd- . jenning's corollary: the chance of the bread falling with the buttered side down is directly proportional to the cost of the carpet-dd- . skinner's constant (flanagan's finagling factor): that quantity which, when multiplied by, divided by, added to, or subtracted from the answer you get, gives the answer you should have gotten-dd- . snafu equation no-dd- 6: badness comes in waves-dd- . the unspeakable law: as soon as you mention something -dd--dd--dd- - if it's good, it goes away-dd- - if it's bad, it happens-dd- . watson's injunction: think-xx- . wohl's riddle: q-dd- what is so rare as a day in june-qq- a-dd- a day in february, which is 6-dd-7% more rare; except in leap year when it is still 3-dd-3% more rare-dd- -- r-dd- wohl . the law of xerox: anything important loses its value soon after being xeroxed-dd- . zymurgy's first law of evolving systems dynamics: once you open a can of worms, the only way to recan them is to use a larger can-dd- . cole's law: thinly sliced cabbage-dd- . schwartz says: playing games leads to mastery-xx- . rob's retort the insult of an enemy is better then the flattery of a friend-dd- . jones' law: the man who can smile when things go wrong-dd--dd--dd- has thought of someone he can blame it on-dd- . weinberg's law: if builders built buildings the way programmers wrote programs, then the first woodpecker that came along would destroy civilization-dd- . rb's five-thumb postulate: experience varies directly with the equipment ruined-dd- . the james-watt-oriented observation: beauty is only skin-deep, but ugly goes clean to the bone-dd- . the illiterati programus canto 1: a program is a lot like a nose - sometimes it runs and sometimes it blows-dd- . lafayette's reprisal: the squeaky wheel gets replaced-dd- . the illiterati programus introduction: to get the job you really want, you must: 1-dd- make a business case against it-dd- 2-dd- use irrefutable arguments against it-dd- you will then be put in charge of it-dd- . the turing test: a sort of love boat for machines-dd- if you survive a week of it, you pass-dd- . advanced systems news letter the nail that sticks up gets hammered down-dd- --anonymous . fallibility: fallible men design fallible computers-dd- a computer program does what you tell it to do, not what you want it to do-dd- . rules of pratt: #1 if a severe problem manifests itself, no solution is acceptable unless it is involved, expensive, and time consuming . rules of pratt: #2 sufficient monies to do the job correctly the first time are not available, however, ample funds are much easier obtained for repeated revisions-dd- . grosch's law: #1 computing power increases as the square of the cost increases, if you want to do it twice as cheap you have to do it four times as fast-dd- . grosch's law: #2 twenty percent of the components account for eighty percent of the cost, and so forth-dd- . troutman's programming law: #1 if a test installation function's perfectly, all subsequent systems will malfunction-dd- . troutman's programming law: #2 not until a program has been in production for at least six months will the most harmful error then be discovered-dd- . troutman's programming law: #3 job control cards that cannot be arranged in improper order will be . troutman's programming law: #4 interchangeable tapes won't . troutman's programming law: #5 if the input editor has been designed to reject all bad input, an ingenious idiot will discover a method to get bad data past it-dd- . troutman's programming law: #6 machines work, people should think-dd- . golub's laws of computerdom: #1 a carelessly planned project takes three times longer to complete than expected; a carefully planned project will take only twice as long-dd- . golub's laws of computerdom: #2 the effort required to correct the error increases geometrically with time-dd- . golub's laws of computerdom: #3 project teams detest weekly progress reporting because it so vividly manifests their lack of progress-dd- . hunts law of suspense: if any work has a suspense date on it, that work will be completed as close to the suspense date as possible regardless of how far in advance it was programmed-dd- . grace's words: what ever happened to "manage machine, lead people" . computers vs people: one good reason why computers can do more work than people is that they never have to stop and answer the phone-dd- . the programmer's nemesis: experts theorize that through evolution and inbreeding, programmers may become a distinct subspecies of the human race-dd- . a law for the future: if it's not in a computer, it doesn't exist-dd- . hogan's homily: we won't have personal computing until we can get them little and talking-dd- . wain's conclusion: the only people making money these days are the ones who sell computer paper-dd- . computer axiom: #1 when putting it into memory, remember where you put it-dd- . law of cybernetic entomology: there's always one more bug-dd- . landau's programming paradox: #1 the best programmer has to be someone . landau's programming paradox: #2 the more humanlike a computer becomes the less time it spends computing and the more time it spends doing more humanlike work-dd- . landau's programming paradox: #3 a software committee of one is limited by its own horizon and will only specify that far-dd- . extended epstein-heisenberg principle: - in a program atmosphere, only two of the three existing measurements can be measured simultaneously-dd- the measurements are program, time, and resource ($)-dd- - if one knows what the task is, and there is a time limit allowed for the completion of the task, then one cannot guess how much it will cost - if the time and resource ($) are clearly defined, then it is impossible to know what part of the program will be performed-dd- - if you are given a clearly defined program goal and a definite amount of money which has been calculated to be necessary for the completion of the task, one cannot predict if and when the goal will be reached-dd- - if one is lucky enough and can accurately define all three measurements, then what one deals with is not in the realm of programming-dd- . gallois's revelation: if you put tomfoolery in a computer nothing comes out but tomfoolery-dd- but this tomfoolery, having passed through a very expensive machine, is somehow enobled and none dare criticize it-dd- . 